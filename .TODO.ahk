#Requires AutoHotkey v2.0 
; Project Level TODOs

;; |||TODO|||
    ;;-||Document|| How to use the "AnimusHK project" system.
    ;;-||Refactor||  Move FileSafeDelete to a library. (In Build.ahk and PluginTree.ahk)
    ;;-||Maybe?||
        ;;?-|Expansions| to old scripts:
            ;;?+ And more 'safe' functions like FileSafeMove to a lib. (they are identical to the original, but they first check 'if FileExist' and return false if it does not.) after fixing it's location.
        ;;?-|New Scripts| 
            ;;?+ Make ArgParser lib
                ;?-- Would contain functions to make it easier to do things such as setting variables if to the arg if it exists, or a default if not. Allowing extra non-positional args after all positional args to allow for things like flags to not require a ton of ",,," to skip over args you aren't using.
        ;;?-|Expand-Src| Long-Description
        /** Add arg to Build.ahk (or a new script) to generate a single-file 'flattened'/'expanded' version of the source code. A sort of 'compiling without compiling'. Both because it is neat, and to allow better debugging by allowing you to see the exact code the interpreter does.  
            - Would need to match real AHK behavior, at any include copy pasting the code being pointed to at that line, but only if the specified file has not yet been included.
            - Would Probably recursively (and top down) handle each inclue. Scanning the main file for any includes, replacing all with the code they point to, repeat until a scan finds none. 
                + For each include in the sub file would need to append any directory info from the top level include. (i.e. if you include _plugins, and in there it includes 'Games\_games.ahk',  then if '_games.ahk' has the line '#include Tis.ahk' the include pasted into the main file would need to be changed to 'Games\Tis.ahk'.)
            - Maybe also stripping comments? but probably not.
        */
        ;;?- Use custom unique file extensions for certain things:
            ;?+| autogenerated files | (".gahk"/".gak"?)
            ;?+|    '.m.ahk' files   | (".mahk"). Instead of 'faking' it with the double extension.


            